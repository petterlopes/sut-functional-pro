# =============================================================================
# SUT Project - Environment Variables Template
# =============================================================================
# Copy this file to .env and fill in the appropriate values for your environment
#
# IMPORTANT: Never commit .env files to version control!
# =============================================================================

# -----------------------------------------------------------------------------
# API Configuration
# -----------------------------------------------------------------------------
# API server binding address
BIND=0.0.0.0:8080

# Allowed origins for the HTTP API (comma separated)
CORS_ALLOWED_ORIGINS=http://localhost:5173

# Rust logging level (trace, debug, info, warn, error)
RUST_LOG=info

# Migrations directory path
MIGRATIONS_DIR=./api/migrations

# -----------------------------------------------------------------------------
# Database Configuration
# -----------------------------------------------------------------------------
# PostgreSQL connection string
PG_DSN=postgres://sut:sut@localhost:5432/sut

# -----------------------------------------------------------------------------
# Keycloak Configuration
# -----------------------------------------------------------------------------
# Keycloak admin credentials
KEYCLOAK_ADMIN=admin
KEYCLOAK_ADMIN_PASSWORD=admin

# Keycloak OIDC endpoints
KEYCLOAK_ISSUER=http://localhost:8081/realms/sut
KEYCLOAK_JWKS=http://localhost:8081/realms/sut/protocol/openid-connect/certs
KEYCLOAK_AUDIENCE=sut-frontend,account

# Keycloak internal URL (for Docker network)
KEYCLOAK_URL=http://keycloak:8080

# -----------------------------------------------------------------------------
# Vault Configuration
# -----------------------------------------------------------------------------
# HashiCorp Vault address
VAULT_ADDR=http://localhost:8200

# Vault token (set via secrets manager in production)
VAULT_TOKEN=dev-root-token

# -----------------------------------------------------------------------------
# Frontend Configuration
# -----------------------------------------------------------------------------
# Vite development server configuration
VITE_KC_URL=http://localhost:8081
VITE_KC_REALM=sut
VITE_KC_CLIENT=sut-frontend
VITE_API_BASE=http://localhost:8080

# -----------------------------------------------------------------------------
# Observability Configuration
# -----------------------------------------------------------------------------
# Metrics authentication token (required when RUST_ENV=production)
METRICS_TOKEN=dev-metrics-token

# -----------------------------------------------------------------------------
# Webhook Configuration
# -----------------------------------------------------------------------------
# Shared secret for authenticating inbound webhooks
WEBHOOK_SHARED_SECRET=dev-shared-webhook-token

# -----------------------------------------------------------------------------
# Security Configuration
# -----------------------------------------------------------------------------
# Development authentication bypass (0 = disabled, 1 = enabled)
# WARNING: Always set to 0 in production!
DEV_AUTH_BYPASS=0
# Note: DEV_AUTH_BYPASS only takes effect when RUST_ENV is not "production".

# -----------------------------------------------------------------------------
# Docker Configuration
# -----------------------------------------------------------------------------
# PostgreSQL credentials (for Docker)
POSTGRES_USER=sut
POSTGRES_PASSWORD=sut
POSTGRES_DB=sut

# Grafana credentials (for Docker)
GF_SECURITY_ADMIN_USER=admin
GF_SECURITY_ADMIN_PASSWORD=admin

# -----------------------------------------------------------------------------
# Notes
# -----------------------------------------------------------------------------
# 1. For local development, you can use the default values provided
# 2. For production deployment:
#    - Use strong, unique passwords
#    - Enable TLS/SSL for all services
#    - Use proper secret management (e.g., Vault, AWS Secrets Manager)
#    - Set DEV_AUTH_BYPASS=0
#    - Use environment-specific database connections
# 3. For Docker Compose deployment, most of these are already configured
#    in docker-compose.dev.yml
# =============================================================================

